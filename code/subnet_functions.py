# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'vlsm.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5.QtWidgets import QTableWidgetItem
from PyQt5 import QtCore, QtGui, QtWidgets
import math

def get_exp(value):
    z = math.log(int(value),(2))
    first_number = str(z).split(".")[0]

    if (2**int(first_number) - int(value) <= 0):
        output = int(first_number) + 1

    else:
        output = first_number

    return output

def get_cidr(x):
    cidr = 32 - get_exp(x)
    return "/" + str(cidr)

def get_broadcast_adress(subnet, host):

    specialValues = [1, 2, 4, 8, 16, 32, 64, 128]
    octet_modif =0
    n = int(Vlsm.get_exp(host))

    ip_splitted = subnet.split(".")
    result=0
    ip_output=""

    if (n <=8 and n >0):
        for i in specialValues[:n]:
            result = result + i

        x = int(ip_splitted[3]) + result
        ip_splitted[3] = str(x)

        ip_output = ip_splitted[0] + "." + ip_splitted[1] + "." + ip_splitted[2] + "." + ip_splitted[3] #172.16.1.255
        octet_modif = 4

    elif (n <=16 and n >8):
        m = n - 8
        for i in specialValues[:m]:
            result = result + i

        x = int(ip_splitted[2]) + result
        ip_splitted[2] = str(x)

        ip_output = ip_splitted[0] + "." + ip_splitted[1] + "." + ip_splitted[2] + ".255"
        octet_modif = 3

    elif (n <=24 and n >16):
        m = n - 16
        for i in specialValues[:m]:
            result = result + i

        x = int(ip_splitted[1]) + result
        ip_splitted[1] = str(x)

        ip_output = ip_splitted[0] + "." + ip_splitted[1] + ".255.255"
        octet_modif = 2

    elif (n <=32 and n >24):
        m = n - 24
        for i in specialValues[:m]:
            result = result + i

        x = int(ip_splitted[0]) + result
        ip_splitted[0] = str(x)

        ip_output = ip_splitted[0] + ".255.255.255"
        octet_modif = 1

    a = ip_output.split(".")
    next_subnet = ""

    if (octet_modif == 4):
        if a[3] == "255" :
            next_subnet = a[0] + "." + a[1] + "." + str(int(a[2]) +1) + ".0"
        else :
            next_subnet = a[0] + "." + a[1] + "." + a[2] + "." + str(int(a[3]) +1)

    if (octet_modif == 3):
        # On regarde si dans l'octet precedent y a 255
        if a[3] == "255" :
            next_subnet = a[0] + "." + a[1] + "." + str(int(a[2]) +1) + ".0"
        else:
            next_subnet = a[0] + "." + a[1] + "." + str(int(a[2]) +1) + "." + a[3]

    if (octet_modif == 2):
        if a[2] == "255" :
            next_subnet = a[0] + "." + str(int(a[1]) +1) + ".0.0"
        else:
            next_subnet = a[0] + "." + str(int(a[1]) +1) + "." + a[2]+ "." + a[3]

    return [ip_output, next_subnet]


class Ui_Main(object):

    def test(table, subnet, host):
        lastrow = table.rowCount()
        table.insertRow(lastrow)

        subnet_text = subnet.text()
        host_text = host.text()

        output = Vlsm.get_broadcast_adress(subnet_text, host_text)

        item1 = QTableWidgetItem(host_text)
        item2 = QTableWidgetItem(subnet_text)
        item3 = QTableWidgetItem(output[0])
        table.setItem(lastrow, 0, item1)
        table.setItem(lastrow, 1, item2)
        table.setItem(lastrow, 2, item3)

        subnet.setText(output[1])

    def mkTable (table, geometry, style, col, row):

        font_table = QtGui.QFont()
        font_table.setPointSize(9)
        
        table.setGeometry(geometry)
        table.setFont(font_table)
        table.setStyleSheet(style)
        table.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        table.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        table.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        table.setSelectionMode(QtWidgets.QAbstractItemView.NoSelection)
        table.setObjectName(str(table))
        table.setColumnCount(col)
        table.setRowCount(row)
        table.verticalHeader().setVisible(False)

    def addDataTable (table, position, text):
        item = QtWidgets.QTableWidgetItem()
        item.setText(text)
        table.setHorizontalHeaderItem(position, item)


    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setObjectName("tableWidget")

        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(30, 130, 131, 31))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit.setText("172.16.0.0")

        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(200, 130, 121, 31))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_2.setText("500")

        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(350, 130, 101, 31))
        self.pushButton.setObjectName("pushButton")

        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        Ui_Main.mkTable(self.tableWidget, QtCore.QRect(0, 330, 801, 271), "background-color: rgb(255, 170, 127);", 3, 0)
        Ui_Main.addDataTable(self.tableWidget, 0, "Host")
        Ui_Main.addDataTable(self.tableWidget, 1, "Subnet")
        Ui_Main.addDataTable(self.tableWidget, 2, "Broadcast Address")
        self.tableWidget.setColumnWidth(0, 80)
        self.tableWidget.setColumnWidth(1, 150)
        self.tableWidget.setColumnWidth(2, 150)
        self.tableWidget.verticalHeader().setVisible(False)

        #ddd
        self.pushButton.clicked.connect(lambda: Ui_Main.test(self.tableWidget, self.lineEdit, self.lineEdit_2))


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "Add Host"))

if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Main = QtWidgets.QMainWindow()
    ui = Ui_Main()
    ui.setupUi(Main)
    Main.show()
    sys.exit(app.exec_())